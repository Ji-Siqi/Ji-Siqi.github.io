{"posts": [{"title": "Overview of Maverick", "date": "2019-12-11T22:23:00-00.00", "path": "/archives/overview/", "text": "Overview\nMaverick is a static blog generator built with python. Like Hexo and Jekyll, it takes Markdown(.md) files as input, and output beautifully formated and well structured website pages(.html). It has a lot built-in useful features(feed, search, sitemap, etc.), with extended Markdown syntax and enhanced image processing pipeline.If you are tired of intricate plugins and complicated configurations, just give Maverick a try. You focus on writing, let Maverick take care of the rest.Pull requests are surely welcome. If you have any questions or suggestions, please head to issue area and leave us a message. Before that, let's finish this document.Usage\nMaverick is build with modern Python, currently at least Python 3.5 is required, make sure you have it installed on your machine.Install\nClone this repository:git clone https://github.com/AlanDecode/Maverick.git ./Maveric &amp;&amp; cd ./Maveric\n\nInstall all dependencies:pip install -r requirements.txt\n\nIf error occurs, please verify your Python and pip version. Then edit the default configuration file:vi ./config.py\n\nFor now let's use the default settings. Type this command in your terminal:python ./build.py\n\n...and a sample static site is generated in test_dist folder! You can then upload them to GitHub Pages or any other server.Generate your own site\nBy default, Maverick searches all .md files recursively under test_src folder, so put your Markdown files in it and run python ./build.py then everything you need will be in test_dist folder. Maverick uses so-called YAML frontmatter to get meta data of your articles, if you have tried Hexo or Jekyll, you should be familiar with it; if you don't, let's look into it now.......Read the full documentation here.License\nMIT \u00a9 AlanDecode.", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Coding", "slug": "Coding", "permalink": "/tag/Coding/"}, {"name": "Development", "slug": "Development", "permalink": "/tag/Development/"}]}, {"title": "Typography", "date": "2018-11-09T23:41:00-00.00", "path": "/archives/typography/", "text": "This is an sample article. Typography matters in Maverick.\nL2 Heading\nL3 Heading\nL4 Heading\nL5 Heading\nL6 Heading\nParagraph\nWe are creating a world that all may enter without privilege or prejudice accorded by race, economic power, military force, or station of birth.We are creating a world where anyone, anywhere may express his or her beliefs, no matter how singular, without fear of being coerced into silence or conformity.Inline elements\nBold, Ruby(\u30eb\u30d3), Italic, Strikethrough, Link1\u3002Blockquote and nested blockquote\n\n\u5b89\u5f97\u5e7f\u53a6\u5343\u4e07\u95f4\uff0c\u5927\u5e87\u5929\u4e0b\u5bd2\u58eb\u4ff1\u6b22\u989c\uff01\u98ce\u96e8\u4e0d\u52a8\u5b89\u5982\u5c71\u3002\n\u545c\u547c\uff01\u4f55\u65f6\u773c\u524d\u7a81\u5140\u89c1\u6b64\u5c4b\uff0c\u543e\u5e90\u72ec\u7834\u53d7\u51bb\u6b7b\u4ea6\u8db3\uff01\n\nCode\nInline code: int a=1;. Code block:int main(int argc , char** argv){\n    std::cout &lt;&lt; &quot;Hello World!\\n&quot;;\n    return 0;\n}\n\nList\nUnordered List\n\niPhone\niPhone X\niPhone 11\n\n\niPad\nMacBook\n\nOrdered List\n\n\u6253\u5f00\u51b0\u7bb1\n\u53f3\u624b\u653e\u5728\u51b0\u7bb1\u95e8\u62c9\u624b\u4e0a\n\u5de6\u624b\u6276\u4f4f\u51b0\u7bb1\u4e3b\u4f53\n\u53f3\u624b\u5411\u540e\u7528\u529b\n\n\n\u628a\u5927\u8c61\u653e\u8fdb\u51b0\u7bb1\n\u5173\u4e0a\u51b0\u7bb1\n\nHorizontal rule\n\nMath\nInline Math: $m\\times n$, math block:$$C_{m\\times k}=A_{m\\times n}\\cdot B_{n\\times k}$$\nFigures\nSingle figure\nPrincess MononokePhotoset\n    Table\n\n\n\n  header\n  header\n\n\n\n\n  cell 1\n  cell 2\n\n\n  cell 3\n  cell 4\n\n\n\nLink Card\n\n                          AlanDecode\n\n\nHome page for AlanDecode&#8617;\n\n\n", "categories": [{"name": "Maverick", "slug": "Maverick", "permalink": "/category/Maverick/"}], "tags": [{"name": "Design", "slug": "Design", "permalink": "/tag/Design/"}, {"name": "Typography", "slug": "Typography", "permalink": "/tag/Typography/"}]}], "pages": [{"title": "About", "date": "2024-02-12T15:03:00-00.00", "path": "/about-zh-CN/", "text": "Maverick \u662f\u4e00\u4e2a\u57fa\u4e8e Python \u6784\u5efa\u7684\u9759\u6001\u535a\u5ba2\u751f\u6210\u5668\u3002\u7c7b\u4f3c Hexo \u548c Jekyll, \u4f7f\u7528 Markdown (.md) \u6587\u4ef6\u4f5c\u4e3a\u8f93\u5165\u6e90, \u8f93\u51fa\u683c\u5f0f\u4f18\u7f8e\u3001\u7ed3\u6784\u826f\u597d\u7684\u9759\u6001\u7f51\u7ad9\u9875\u9762 (.html). \u5b83\u5185\u7f6e\u8bb8\u591a\u6709\u7528\u7684\u7279\u6027(feed, search, sitemap, etc.), \u652f\u6301\u589e\u5f3a\u7684 Markdown \u8bed\u6cd5\uff0c\u589e\u52a0\u5185\u7f6e\u7684\u56fe\u50cf\u5904\u7406.\u5982\u679c\u60a8\u5bf9\u590d\u6742\u7684\u63d2\u4ef6\u548c\u590d\u6742\u7684\u914d\u7f6e\u611f\u5230\u538c\u5026\uff0c\u53ea\u9700\u5c1d\u8bd5\u4e00\u4e0bMaverick\u3002 \u60a8\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5199\u4f5c\uff0c\u8ba9Maverick\u8d1f\u8d23\u5176\u4f59\u7684\u5de5\u4f5c\u3002\u6b22\u8fce\u63d0\u4ea4 Pull requests\u3002\u5982\u679c\u4f60\u6709\u4e00\u4e9b\u95ee\u9898\u548c\u5efa\u8bae\uff0c\u8bf7\u524d\u5f80 issue area \u7ed9\u6211\u4eec\u7559\u8a00\u3002 \u63d0\u95ee\u4e4b\u524d\uff0c\u8bf7\u5148\u9605\u8bfb\u5b8c\u672c\u6587\u6863\u3002Contact\nEmail: hi#imalan.cn (replace # with @)Telegram\uff1aAlanDecode", "categories": [], "tags": []}, {"title": "About", "date": "2017-06-28T17:26:00-00.00", "path": "/about/", "text": "Maverick is a static blog generator built with python. Like Hexo and Jekyll, it takes Markdown(.md) files as input, and output beautifully formated and well structured website pages(.html). It has a lot built-in useful features(feed, search, sitemap, etc.), with extended Markdown syntax and enhanced image processing pipeline.If you are tired of intricate plugins and complicated configurations, just give Maverick a try. You focus on writing, let Maverick take care of the rest.Pull requests are surely welcome. If you have any questions or suggestions, please head to issue area and leave us a message. Before that, let's finish this document.Contact\nEmail: hi#imalan.cn (replace # with @)Telegram\uff1aAlanDecode", "categories": [], "tags": []}]}